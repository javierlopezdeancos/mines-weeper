{"version":3,"file":"mines-weeper.js","sourceRoot":"","sources":["../src/mines-weeper.ts"],"names":[],"mappings":"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","sourcesContent":["export class MinesWeeper {\n  public on = false;\n\n  public matrix: string[][] = [];\n\n  public size: number;\n\n  public difficulty: number;\n\n  public mines: number[][] = [];\n\n  public picks = 0;\n\n  public cells = 0;\n\n  private displayed: number[][] = [];\n\n  private symbols = {\n    mine: 'üí£',\n    bomb: 'üí•',\n    hide: '‚ùì',\n  };\n\n  constructor(size: number, difficulty: number) {\n    this.size = size;\n    this.difficulty = difficulty;\n    this.cells = size * size;\n  }\n\n  private getRandom(min: number, max: number): number {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  private setMines(): void {\n    const m: number[][] = [];\n\n    for (let i = 0; i < this.difficulty; i++) {\n      const row = this.getRandom(i, this.difficulty);\n      const column = this.getRandom(this.difficulty, i);\n\n      m[i] = [row, column];\n    }\n\n    this.mines = [...m];\n  }\n\n  private generateRow(): string[] {\n    const r: string[] = [];\n\n    for (let c = 0; c < this.size; c++) {\n      r[c] = this.symbols.hide;\n    }\n\n    return r;\n  }\n\n  private generate(): void {\n    const m: string[][] = [];\n\n    for (let r = 0; r < this.size; r++) {\n      const row = this.generateRow();\n      m[r] = row;\n    }\n\n    this.matrix = [...m];\n  }\n\n  private cellHasMine(row: number, column: number): boolean {\n    for (const mine of this.mines) {\n      const [r, c] = mine;\n\n      if (row === r && column === c) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private getCloseCells(row: number, column: number): number[][] {\n    const closeCells: number[][] = [];\n\n    const columnStart = column - 1 < 0 ? column : column - 1;\n    const columnEnd = column + 1 > this.size ? column : column + 1;\n    const rowStart = row - 1 < 0 ? row : row - 1;\n    const rowEnd = row + 1 > this.size ? row : row + 1;\n\n    for (let j = columnStart; j <= columnEnd; j++) {\n      for (let i = rowStart; i <= rowEnd; i++) {\n        if ([i, j] !== [row, column] && this.cellHasMine(i, j)) {\n          closeCells.push([i, j]);\n        }\n      }\n    }\n\n    return closeCells;\n  }\n\n  private getNearbyMines(r: number, c: number): number {\n    return this.getCloseCells(r, c).length;\n  }\n\n  public resolve() {\n    for (let r = 0; r < this.size; r++) {\n      for (let c = 0; c < this.size; c++) {\n        const hasMine = this.cellHasMine(r, c);\n\n        if (hasMine && this.matrix[r][c] !== this.symbols.bomb) {\n          this.matrix[r][c] = this.symbols.mine;\n        } else if (!hasMine) {\n          const nearbyMines = this.getNearbyMines(r, c).toString();\n          this.matrix[r][c] = nearbyMines;\n        }\n      }\n    }\n  }\n\n  public set(row: number, column: number, value: string): void {\n    if (value !== this.symbols.hide) {\n      this.matrix[row][column] = value;\n      return;\n    }\n\n    this.matrix[row][column] = value;\n  }\n\n  public pick(row: number, column: number): [boolean, string | undefined] {\n    this.picks++;\n    const hasMine = this.cellHasMine(row, column);\n\n    if (hasMine) {\n      this.set(row, column, this.symbols.bomb);\n      this.displayed.push([row, column]);\n      this.on = false;\n      return [true, undefined];\n    }\n\n    const nearbyMines = this.getNearbyMines(row, column).toString();\n    this.set(row, column, nearbyMines);\n    this.displayed.push([row, column]);\n    return [false, nearbyMines];\n  }\n\n  public initialize(): void {\n    this.on = true;\n    this.generate();\n    this.setMines();\n  }\n}\n"]}